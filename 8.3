const express = require("express");
const bodyParser = require("body-parser");
const authRoutes = require("./routes/authRoutes");
const protectedRoutes = require("./routes/protectedRoutes");

const app = express();
app.use(bodyParser.json());

app.use("/", authRoutes);
app.use("/", protectedRoutes);

const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server is running successfully at http://localhost:${PORT}`);
});
const jwt = require("jsonwebtoken");
const SECRET_KEY = "mySecretKey";

exports.verifyToken = (req, res, next) => {
  const authHeader = req.headers["authorization"];
  const token = authHeader && authHeader.split(" ")[1];

  if (!token) {
    return res.status(401).json({ message: "Token not provided" });
  }

  jwt.verify(token, SECRET_KEY, (err, decoded) => {
    if (err) {
      return res.status(403).json({ message: "Invalid token" });
    }
    req.user = decoded;
    next();
  });
};
const express = require("express");
const router = express.Router();
const { login } = require("../controllers/authController");

router.post("/login", login);

module.exports = router;
const express = require("express");
const bodyParser = require("body-parser");
const authRoutes = require("./routes/authRoutes");
const protectedRoutes = require("./routes/protectedRoutes");

const app = express();
app.use(bodyParser.json());

app.use("/", authRoutes);
app.use("/", protectedRoutes);

const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server is running successfully at http://localhost:${PORT}`);
});
